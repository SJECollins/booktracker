(()=>{function t(t,r){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var o,a,i,n,d=[],l=!0,u=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;l=!1}else for(;!(l=(o=i.call(r)).done)&&(d.push(o.value),d.length!==e);l=!0);}catch(t){u=!0,a=t}finally{try{if(!l&&null!=r.return&&(n=r.return(),Object(n)!==n))return}finally{if(u)throw a}}return d}}(t,r)||function(t,r){if(t){if("string"==typeof t)return e(t,r);var o={}.toString.call(t).slice(8,-1);return"Object"===o&&t.constructor&&(o=t.constructor.name),"Map"===o||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(t,r):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,o=Array(e);r<e;r++)o[r]=t[r];return o}document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementById("app");window.viewParams={};var r=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.innerHTML="";var o=document.getElementById("view-script");o&&o.remove(),window.viewParams=r;var a=document.createElement("script");a.id="view-script",a.src="dist/".concat(t,".bundle.js"),document.body.appendChild(a)};window.loadView=r;var o={"view-book-list":{view:"booklist",idParam:null},"view-author-list":{view:"authorlist",idParam:null},"view-book":{view:"bookdetails",idParam:"bookId"},"view-author":{view:"authordetails",idParam:"authorId"},"add-book":{view:"bookform",idParam:null},"add-author":{view:"authorform",idParam:null},"edit-book":{view:"bookform",idParam:"bookId"},"edit-author":{view:"authorform",idParam:"authorId"},"delete-book":{view:"deletebook",idParam:"bookId"},"delete-author":{view:"deleteauthor",idParam:"authorId"}};document.body.addEventListener("click",(function(e){var a=e.target,i=Object.entries(o).find((function(e){var r=t(e,1)[0];return a.id===r||a.classList.contains(r)}));if(i){var n=t(i,2)[1],d=n.view,l=n.idParam,u=l?{id:a.dataset[l]}:{};r(d,u)}})),r("booklist")}))})();
//# sourceMappingURL=index.bundle.js.map